# Scrollback.
set -g history-limit 10000

# Use Vi keybindings in Copy mode.
set -g mode-keys vi

# Resize the session to fit in all attached clients.
set -g aggressive-resize on

# Start windows & panes at 1, not 0.
set -g base-index 1
set -g pane-base-index 1

# React to the bell character, both displaying a message and passing it on.
set -g monitor-bell on
set -g visual-bell both

# Set the xterm window title to session name.
set -g set-titles on
set -g set-titles-string "#{session_name}"

# Statusbar.
set -g status-left-length 20
set -g status-right "#{host_short} #[fg=#{status-bg},bg=terminal] %H:%M #[fg=terminal,bg=#{status-bg}] W%W %a '%g "
set -g status-style bg=cyan
# set -g status-right-length 80


### Bindings.

# Duplicate builtins, but with CTRL held down.
bind C-d detach-client

# A friendlier form of the builtin `'`.
bind w   command-prompt -p "select window: [#{W:#{window_index};}]" "select-window -t ':%%'"
bind C-w command-prompt -p "select window: [#{W:#{window_index};}]" "select-window -t ':%%'"

# Create new windows with the working directory of the current window.
bind c   new-window -c "#{pane_current_path}"
bind C-c new-window -c "#{pane_current_path}"

# Create horizontal and vertical panes.
bind h   split-window -h -c "#{pane_current_path}"
bind C-h split-window -h -c "#{pane_current_path}"
bind v   split-window -v -c "#{pane_current_path}"
bind C-v split-window -v -c "#{pane_current_path}"

# Kill current pane (like how `&` does kill-window).
bind k   confirm-before -p "kill pane \"#{pane_title}\"? [y/N]" kill-pane
bind C-k confirm-before -p "kill pane \"#{pane_title}\"? [y/N]" kill-pane

# Create a new tab with SSH.
bind S   command-prompt "new-window -n %1 'ssh %1'"
bind C-S command-prompt "new-window -n %1 'ssh %1'"
