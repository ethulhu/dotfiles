#!/bin/sh

set -eu

readonly description='Remove a worktree from its repo.'
readonly this="$(basename "${0}")"

usage() {
  echo 'Usage:'
  echo "    ${this} <path/to/worktree>"
  echo
  echo 'Description:'
  echo "    ${description}"
}

case "$*" in
  --help|-h)
    usage
    exit
    ;;

  --description)
    echo "${description}"
    exit
    ;;
esac

if [ $# -ne 1 ]; then
  usage
  exit 1
fi
readonly path="${1}"


readonly git_dir="$(git -C "${path}" rev-parse --git-common-dir 2>/dev/null)"
if [ ! "${git_dir}" ]; then
  echo "${this}: Not a worktree: ${path}"
  exit 1
fi
readonly name="$(basename "${git_dir}")"
readonly branch="$(git -C "${path}" branch --show-current)"

__git() {
  repo git "${name}" $@
}


readonly default_branch="$(basename "$(__git symbolic-ref HEAD)")"
readonly remote="$(__git rev-parse --abbrev-ref "${branch}@{upstream}" 2>/dev/null)"

confirm "Remove worktree ${path} (repo ${name}, branch ${branch}) ?" && ( \
  __git worktree remove "${path}" || ( \
    confirm "Force ?" && __git worktree remove --force "${path}" ) )

if [ "${branch}" = "${default_branch}" ]; then
  exit
fi

test "${remote}" && \
  confirm "Delete remove branch: ${branch} ?" && \
    __git push --delete "${branch}"

confirm "Delete local branch: ${branch} ?" && \
  __git branch --delete --force "${branch}"
