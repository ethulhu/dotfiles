#!/usr/bin/env python3
"""control backlights."""

import sys
import textwrap


def max_brightness_raw() -> int:
    with open('/sys/class/backlight/intel_backlight/max_brightness') as f:
        value = f.read().strip()
    return int(value)


def current_brightness_raw() -> int:
    with open('/sys/class/backlight/intel_backlight/brightness') as f:
        value = f.read().strip()
    return int(value)


def set_brightness_raw(value: int):
    with open('/sys/class/backlight/intel_backlight/brightness', 'w') as f:
        print(f'{int(value)}', file=f)


# commands.

def current_brightness() -> int:
    return round((current_brightness_raw() / max_brightness_raw()) * 100)


def set_brightness(value: int):
    set_brightness_raw(value * (max_brightness_raw() / 100))


if __name__ == '__main__':
    if len(sys.argv) == 1:
        print(f'{current_brightness()}%')
    elif len(sys.argv) == 2 and sys.argv[1] == 'up':
        brightness = current_brightness() + 10
        brightness = 100 if brightness > 100 else brightness
        set_brightness(brightness)
    elif len(sys.argv) == 2 and sys.argv[1] == 'down':
        brightness = current_brightness() - 10
        brightness = 100 if brightness < 0 else brightness
        set_brightness(brightness)
    elif len(sys.argv) == 3 and sys.argv[1] == 'set' and sys.argv[2].isdigit():
        brightness = int(sys.argv[2])
        if not (0 <= brightness <= 100):
            print('brightness must be between 0 and 100')
            sys.exit(1)
        set_brightness(brightness)
    else:
        print(textwrap.dedent('''
            usage:
                backlight
                backlight <up|down>
                backlight set <0-100>
        ''').strip())
        sys.exit(1)
